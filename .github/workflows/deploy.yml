name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:

    - name: Note Build Start Time
      id : start_time
      run : echo "START_TIME=$(date +%s)" >> $GITHUB_ENV
      
    - name: 1️⃣ Checkout Repository
      uses: actions/checkout@v3

    - name: 2️⃣ Decode & Restore Service Account Key
      run: echo "${{ secrets.GCP_SA_KEY }}" | base64 --decode > blinker-backend-key.json

    - name: 3️⃣ Authenticate with GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: "${{ secrets.GCP_SA_KEY }}"

    - name: 4️⃣ Configure Docker Authentication
      run: gcloud auth configure-docker asia-northeast3-docker.pkg.dev

    - name: 5️⃣ Build Docker Image
      run: docker build -t asia-northeast3-docker.pkg.dev/blinker-backend/blinker-repo/blinker-backend:latest .

    - name: 6️⃣ Push Docker Image to Artifact Registry
      run: docker push asia-northeast3-docker.pkg.dev/blinker-backend/blinker-repo/blinker-backend:latest

    - name: 7️⃣ Deploy to Cloud Run
      run: |
        gcloud run deploy blinker-backend \
          --image=asia-northeast3-docker.pkg.dev/blinker-backend/blinker-repo/blinker-backend:latest \
          --platform=managed \
          --region=asia-northeast3 \
          --allow-unauthenticated \
          --add-cloudsql-instances=blinker-db:asia-northeast3:blinker-atom-db \
          --set-env-vars SPRING_PROFILES_ACTIVE=prod \
          --set-env-vars GOOGLE_APPLICATION_CREDENTIALS=/app/blinker-backend-key.json

    - name: 종료 시간 기록
      id: end_time
      run: echo "END_TIME=$(date +%s)" >> $GITHUB_ENV

    - name: 빌드 성공 Discord 알림
      if: success()
      uses: tsickert/discord-webhook@v6.0.0
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
        embed-title: "✅**배포 성공.**"
        embed-url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        embed-description: |
          𝑒 **배포 환경:** `prod`
          𝘣 **대상 브랜치:** `${{ github.ref_name }}`
          𝑡 **소요 시간:** `${{ env.END_TIME }} - ${{env.START_TIME }}초`
        embed-color: "3066993"  # 초록색 성공 컬러

    - name: 빌드 실패 Slack 알림
      if: failure()
      run: |
        BUILD_TIME=$((END_TIME - START_TIME))
        curl -X POST -H 'Content-type: application/json' \
        --data '{
          "text": "🌋 *배포 실패!* ",
          "attachments": [
            {
              "color": "#ff0000",
              "fields": [
                { "title": "Status", "value": "실패 🌋", "short": true },
                { "title": "Branch", "value": "'$(git rev-parse --abbrev-ref HEAD)'", "short": true },
                { "title": "Build Time", "value": "'"$BUILD_TIME"초'", "short": true },
                { "title": "Committer", "value": "'"$(git config user.name)"'", "short": true }
              ]
            }
          ]
        }' "${{ secrets.SLACK_WEBHOOK_URL }}"